server:
  port: 8001

spring:
  application:
    name: cloud-payment-service
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource            # 当前数据源操作类型
    url: jdbc:mysql://localhost:3306/rade_cloud_payment?useUnicode=true&characterEncoding=utf-8&useSSL=false
    username: root
    password: root
    driver-class-name: com.mysql.cj.jdbc.Driver
  # zipkin配置
  zipkin:
    base-url: http://localhost:9411
  sleuth:
    sampler:
      # 采样率值介于0到1之间，1则表示全部采集
      probability: 1

mybatis:
  mapperLocations: classpath:mapper/*.xml
  type-aliases-package: com.radebit.springcloud.entities    # 所有Entity别名类所在包

eureka:
  client:
    register-with-eureka: true  # 把自己注册进Eureka
    fetch-registry: true  # 是否从EurekaServer抓取已有的注册信息。单节点无所谓，集群必须设置为true才能配合ribbon使用负载均衡
    service-url:
      #      defaultZone: http://localhost:7001/eureka # 单机版写法
      defaultZone: http://eureka7001.com:7001/eureka,http://eureka7002.com:7002/eureka # 集群版写法
  instance:
    instance-id: payment8001  # 主机名称
    prefer-ip-address: true # 访问路径可以显示IP地址

    # 心跳与续约时间   开发时，建议设置小一些，保证服务关闭后注册中心能及时剔除服务
    lease-renewal-interval-in-seconds: 1  # Eureka客户端向服务端发送心跳的时间间隔，单位为秒（默认30秒）
    lease-expiration-duration-in-seconds: 2 # Eureka服务端在收到最后一次心跳后等待的时间上限，单位为秒（默认90秒），超时将剔除服务